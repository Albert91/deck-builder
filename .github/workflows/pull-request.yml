name: Pull Request Workflow

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint
  
  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit tests with coverage
        run: yarn test:coverage
        
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 5

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      SITE_URL: ${{ secrets.SITE_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run E2E tests with coverage
        run: yarn test:e2e
        
      - name: Upload E2E test coverage
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-coverage
          path: coverage-e2e/
          retention-days: 5

  status-comment:
    name: PR Status Comment
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: always() && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: unit-coverage
          
      - name: Download E2E test coverage
        uses: actions/download-artifact@v4
        with:
          name: e2e-test-coverage
          path: e2e-coverage
          
      - name: Create status comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Try to read coverage summary files if they exist
            let unitCoverage = 'N/A';
            let e2eCoverage = 'N/A';
            
            try {
              if (fs.existsSync('./unit-coverage/coverage-summary.json')) {
                const unitData = JSON.parse(fs.readFileSync('./unit-coverage/coverage-summary.json', 'utf8'));
                unitCoverage = unitData.total.statements.pct + '%';
              }
            } catch (error) {
              console.log('Error reading unit test coverage:', error);
            }
            
            try {
              if (fs.existsSync('./e2e-coverage/coverage-summary.json')) {
                const e2eData = JSON.parse(fs.readFileSync('./e2e-coverage/coverage-summary.json', 'utf8'));
                e2eCoverage = e2eData.total.statements.pct + '%';
              }
            } catch (error) {
              console.log('Error reading e2e test coverage:', error);
            }
            
            const comment = `### Pull Request Validation Status ✅
            
            All checks have passed successfully!
            
            | Test Type | Status | Coverage |
            | --------- | ------ | -------- |
            | Lint | ✅ Passed | N/A |
            | Unit Tests | ✅ Passed | ${unitCoverage} |
            | E2E Tests | ✅ Passed | ${e2eCoverage} |
            
            *Comment generated automatically by GitHub Actions*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 